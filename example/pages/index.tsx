import type { NextPage } from 'next';
import { useState, useEffect } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { createView, ViewModelProps } from 'react-create-view';
import { faker } from '@faker-js/faker';

type HomeModel = {
  name: string;
  getName: () => Promise<void>;
};

type HomeViewModelProps = ViewModelProps<HomeModel>;

const useHomeView = (): HomeViewModelProps => {
  const [isLoading, setIsLoading] = useState(false);
  const [name, setName] = useState('Chris Fields');
  const [numClicks, setNumClicks] = useState(1);

  const getName = async () => {
    setIsLoading(true);
    setNumClicks((prev) => prev + 1);
    return new Promise<void>((res) => {
      setTimeout(() => {
        setName(faker.name.fullName());
        setIsLoading(false);
        res(undefined);
      }, 1000 * 1);
    });
  };

  const shouldError = numClicks % 3 === 0;
  if (shouldError) {
    return {
      status: 'error',
      error: new Error('Failed to get a name'),
      onRetry: getName,
    };
  }

  if (isLoading) {
    return {
      status: 'loading',
    };
  }

  return {
    status: 'success',
    model: {
      name,
      getName,
    },
  };
};

const HomeView = createView<HomeModel>({
  Success({ name, getName }) {
    return (
      <div>
        <h1>{name}</h1>

        <button onClick={getName}>Change Name</button>
      </div>
    );
  },
  Loading() {
    return <h1>Loading...</h1>;
  },
  Failure({ error, onRetry }) {
    return (
      <div>
        <h1 style={{ color: 'red' }}>{error.message}</h1>

        <button onClick={onRetry}>Change Name</button>
      </div>
    );
  },
});

const Home: NextPage = () => {
  const viewModel = useHomeView();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <HomeView {...viewModel} />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
